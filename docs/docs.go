// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/balance": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves balance based on given user ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "user id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "currency",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Balance"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/balance/credit": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Withdraws money from the balance by user id",
                "parameters": [
                    {
                        "description": "credit params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Credit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/balance/debet": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Deposits money to the balance by user id",
                "parameters": [
                    {
                        "description": "debet params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Debet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Balance"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/balance/transaction": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves transactions based on given user ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "user id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "amount",
                            "created_at"
                        ],
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "count",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Transaction"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/balance/transfer": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Transfer money from payer id to payee id",
                "parameters": [
                    {
                        "description": "transfer params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Transfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "domain.Balance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payee_id": {
                    "type": "string"
                },
                "payer_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.Credit": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "comment": {
                    "type": "string",
                    "example": "took it from an ATM"
                },
                "user_id": {
                    "type": "string",
                    "example": "bcf4b5f7-8f73-4205-82e6-cf20e898a98a"
                }
            }
        },
        "dto.Debet": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "comment": {
                    "type": "string",
                    "example": "salary"
                },
                "user_id": {
                    "type": "string",
                    "example": "bcf4b5f7-8f73-4205-82e6-cf20e898a98a"
                }
            }
        },
        "dto.Transfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 100
                },
                "comment": {
                    "type": "string",
                    "example": "paid the debt"
                },
                "payee_id": {
                    "type": "string",
                    "example": "a39c71f8-6d1b-466c-8367-ebd86764268b"
                },
                "payer_id": {
                    "type": "string",
                    "example": "bcf4b5f7-8f73-4205-82e6-cf20e898a98a"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
